name: Debug Sheets Access

on:
  workflow_dispatch:

jobs:
  debug-access:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install ONLY gspread and google-auth
        run: |
          pip install gspread google-auth

      - name: Test EXACT same code that worked before
        env:
          GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}
          COMMISSIONER_SHEET_URL: ${{ secrets.COMMISSIONER_SHEET_URL }}
        run: |
          echo "$GOOGLE_APPLICATION_CREDENTIALS_JSON" | base64 -d > /tmp/gcp-key.json

          python << 'EOF'
          import os
          import gspread
          from google.oauth2.service_account import Credentials
          import time

          print("EXACT TEST FROM SUCCESSFUL RUN")
          print("="*50)

          sheet_url = os.environ.get("COMMISSIONER_SHEET_URL", "")
          sheet_id = sheet_url.split("/d/")[1].split("/")[0] if "docs.google.com" in sheet_url else sheet_url

          print(f"Sheet ID: {sheet_id}")

          # EXACT authentication from test
          scope = ["https://www.googleapis.com/auth/spreadsheets.readonly"]
          creds = Credentials.from_service_account_file("/tmp/gcp-key.json", scopes=scope)
          gc = gspread.authorize(creds)

          print("Opening sheet...")
          sheet = gc.open_by_key(sheet_id)
          print(f"✓ Opened: {sheet.title}")

          worksheets = sheet.worksheets()
          print(f"✓ Found {len(worksheets)} worksheets")

          # Try EXACT same read that worked
          ws = worksheets[1] if len(worksheets) > 1 else worksheets[0]
          print(f"Reading from: {ws.title}")

          start = time.time()
          try:
              # EXACT same range that worked
              values = ws.get("A1:C3")
              elapsed = time.time() - start
              print(f"✓ Read {len(values)} rows in {elapsed:.2f} seconds")
              print(f"First row: {values[0] if values else 'empty'}")
          except Exception as e:
              elapsed = time.time() - start
              print(f"✗ Failed after {elapsed:.2f} seconds: {e}")
          EOF

      - name: Also test with pandas/pyarrow installed
        env:
          GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}
          COMMISSIONER_SHEET_URL: ${{ secrets.COMMISSIONER_SHEET_URL }}
        run: |
          pip install pandas pyarrow google-cloud-storage

          python << 'EOF'
          import os
          import gspread
          from google.oauth2.service_account import Credentials
          import time

          print("\nTEST WITH FULL DEPENDENCIES")
          print("="*50)

          sheet_url = os.environ.get("COMMISSIONER_SHEET_URL", "")
          sheet_id = sheet_url.split("/d/")[1].split("/")[0] if "docs.google.com" in sheet_url else sheet_url

          scope = ["https://www.googleapis.com/auth/spreadsheets.readonly"]
          creds = Credentials.from_service_account_file("/tmp/gcp-key.json", scopes=scope)
          gc = gspread.authorize(creds)

          sheet = gc.open_by_key(sheet_id)
          worksheets = sheet.worksheets()

          ws = worksheets[1] if len(worksheets) > 1 else worksheets[0]
          print(f"Reading from: {ws.title}")

          start = time.time()
          try:
              values = ws.get("A1:C3")
              elapsed = time.time() - start
              print(f"✓ Read {len(values)} rows in {elapsed:.2f} seconds")
          except Exception as e:
              elapsed = time.time() - start
              print(f"✗ Failed after {elapsed:.2f} seconds: {e}")
          EOF