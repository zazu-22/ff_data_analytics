[project]
name = "ff-analytics"
version = "0.5.0"
description = "Adavanced data architecture and analytics for Fantasy Football"
readme = "README.md"
requires-python = ">=3.13.6"
dependencies = [
    "altair>=5.5.0",
    "duckdb>=1.4.0",
    "google-api-python-client>=2.183.0",
    "google-auth>=2.40.3",
    "google-cloud-storage>=3.4.0",
    "gspread>=6.2.1",
    "jupyter>=1.1.1",
    "marimo>=0.16.2",
    "matplotlib>=3.10.6",
    "nflreadpy>=0.1.3",
    "oauth2client>=4.1.3",
    "openai>=1.109.1",
    "pandas>=2.3.2",
    "polars[pyarrow]>=1.33.1",
    "pyarrow>=21.0.0",
    "pydrive2>=1.21.3",
    "rich>=14.1.0",
    "seaborn>=0.13.2",
    "sqlglot>=27.19.0",
    "vegafusion>=2.0.2",
    "vl-convert-python>=1.8.0",
    "websockets>=15.0.1",
]

[dependency-groups]
dev = [
    "dbt-duckdb>=1.8.0",
    "mdformat>=1.0.0",
    "pre-commit>=4.3.0",
    "pyrefly>=0.34.0",
    "pytest>=8.4.2",
    "python-lsp-ruff>=2.2.2",
    "python-lsp-server>=1.13.1",
    "ruff>=0.13.2",
    "sqlfluff>=3.1.1",
    "sqlfluff-templater-dbt>=3.1.1",
    "yamllint>=1.35.1",
]

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

# Ruff configuration
[tool.ruff]
line-length = 100
target-version = "py313"  # Updated to match requires-python = ">=3.13.6"
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "docs",
    "migrations",
    "venv",
    ".venv",  # Added for uv virtual environment
    "**/*script_snippets/**",
    "data/**",  # Exclude data files from linting
    "notebooks/**",  # Exclude Jupyter notebook exports
    "scripts/_debug/**/*.py",
]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "UP",   # pyupgrade
    "D",    # pydocstyle
    "S",    # flake8-bandit (security)
    "C90",  # mccabe complexity
    "N",    # pep8-naming
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "PTH",  # flake8-use-pathlib
    "PD",   # pandas-vet
    "NPY",  # NumPy-specific rules
]
ignore = [
    "D100",  # Missing docstring in public module
    "D104",  # Missing docstring in public package
    "D203",  # 1 blank line required before class docstring
    "D213",  # Multi-line docstring summary should start at the second line
    "D205",  # Blank line required between summary and description
    "S101",  # Use of assert detected (needed for tests)
]

[tool.ruff.lint.per-file-ignores]
"notebooks/**/*.ipynb" = [
    "E501",  # Line too long (notebooks often have long print/display statements)
    "F821",  # Undefined name (Jupyter built-ins: display, get_ipython, etc.)
]

[tool.ruff.lint.isort]
known-first-party = ["ff_analytics_utils"]  # Actual importable package in src/
combine-as-imports = true
force-single-line = false  # Allow multi-line imports for readability

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"

# Type checking configuration
[tool.pyrefly]
project-includes = [
    "ingest/**/*.py",  # Core ingestion modules
    "tools/**/*.py",   # Project tools
    "tests/**/*.py",   # Test suite
    "scripts/**/*.py", # Python scripts
]
project-excludes = [
    "**/node_modules",
    "**/__pycache__",
    "**/*venv/**/*",
    "**/.venv/**/*",  # UV virtual environment
    "**/*script_snippets",
    "data/**",  # Exclude data directories
    "notebooks/**",  # Exclude notebooks (analyzed separately)
    "dbt/**",  # DBT has its own linting
]

# SQL linting configuration
[tool.sqlfluff.core]
max_line_length = 120
indent_unit = "space"
templater = "dbt"
dialect = "duckdb"
sql_file_exts = ".sql,.sql.j2,.dml,.ddl"
exclude_rules = "L034,L044,RF04,CV06"  # Allow keywords as identifiers; ignore semicolon terminator

[tool.sqlfluff.indentation]
indent_unit = "space"
tab_space_size = 2

[tool.sqlfluff.layout.type.comma]
line_position = "trailing"

[tool.sqlfluff.rules.capitalisation.keywords]
capitalisation_policy = "lower"

[tool.sqlfluff.rules.capitalisation.identifiers]
capitalisation_policy = "lower"

[tool.sqlfluff.rules.capitalisation.functions]
capitalisation_policy = "lower"

[tool.sqlfluff.templater.dbt]
project_dir = "dbt/ff_analytics"
profiles_dir = "dbt/ff_analytics"
profile = "ff_duckdb"
target = "local"

# YAML linting configuration
[tool.yamllint]
extends = "default"
ignore = [
    ".venv/",
    "venv/",
    "data/",
]

[tool.yamllint.rules.line-length]
max = 120
level = "warning"

[tool.yamllint.rules.document-start]
disable = true

[tool.yamllint.rules.truthy]
allowed-values = ["true", "false", "yes", "no"]

# Coverage configuration
[tool.coverage.run]
source = ["ingest", "tools"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/.venv/*",
    "*/venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-ra -q --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
