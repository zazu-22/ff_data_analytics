version: 2

models:
  - name: fact_player_stats
    description: |
      Consolidated fact table for all NFL player statistics across multiple sources.

      Combines base player stats (passing, rushing, receiving, defense), snap counts,
      and fantasy opportunity metrics into a single long-form table following the 2x2
      stat model (actual vs projected × real-world vs fantasy).

      **Grain**: One row per player per game per stat per provider
      **Sources**: nflverse (player_stats, snap_counts, ff_opportunity)
      **Seasons**: 2023-2025 (2.7M rows, 109 stat types)
      **Architecture**: ADR-009 (single consolidated fact table), ADR-010 (mfl_id canonical identity)

    columns:
      - name: player_id
        description: |
          Canonical player identifier (mfl_id from dim_player_id_xref).
          Maps to 19 fantasy platform provider IDs.
          Value of -1 indicates unmapped player (no crosswalk match).
        tests:
          - not_null
          - relationships:
              to: ref('dim_player_id_xref')
              field: mfl_id
              config:
                where: "player_id != -1"  # Allow unmapped players

      - name: player_key
        description: |
          Composite player identifier ensuring grain uniqueness.
          - Mapped players: player_key = player_id (canonical mfl_id as varchar)
          - Unmapped players: player_key = raw provider ID (gsis_id or pfr_id)
          - Unknown players: player_key = 'UNKNOWN_' || game_id (fail-safe)

          This prevents duplicate grain violations when multiple unmapped players
          appear in the same game (e.g., depth TEs without crosswalk entries).
        tests:
          - not_null

      - name: game_id
        description: |
          Game identifier. For player_stats: surrogate key (season_week_team_opponent).
          For snap_counts/ff_opportunity: nflverse game_id.
        tests:
          - not_null

      - name: season
        description: NFL season year (2020-2025)
        tests:
          - not_null
          - accepted_values:
              values: [2020, 2021, 2022, 2023, 2024, 2025]

      - name: week
        description: Week number (1-22, includes playoffs)
        tests:
          - not_null

      - name: season_type
        description: |
          Season type: REG (regular season), POST (playoffs generic),
          WC (wild card), DIV (divisional), CON (conference), SB (super bowl), PRE (preseason)
        tests:
          - not_null
          - accepted_values:
              values: ['REG', 'POST', 'WC', 'DIV', 'CON', 'SB', 'PRE']

      - name: position
        description: |
          Player position. Fantasy-relevant positions: QB, RB, WR, TE, K.
          Non-fantasy positions include: T, G, C, OL, LS, DE, DT, LB, CB, S, etc.
          Used to filter grain tests to fantasy-relevant players only.
        tests:
          - not_null

      - name: stat_name
        description: |
          Name of the statistic (e.g., passing_yards, receptions, offense_snaps, fg_made).
          109 unique stat types across all sources:
          - 71 base stats (passing, rushing, receiving, defense, kicking)
          - 6 snap stats (offense_snaps, offense_pct, defense_snaps, defense_pct, st_snaps, st_pct)
          - 32 opportunity stats (*_exp, *_diff, air_yards, attempt metrics)
        tests:
          - not_null

      - name: stat_value
        description: Numeric value of the statistic
        tests:
          - not_null

      - name: measure_domain
        description: |
          Measurement domain (real_world or fantasy).
          Currently all values are 'real_world' (fantasy scoring applied in marts).
        tests:
          - not_null
          - accepted_values:
              values: ['real_world', 'fantasy']

      - name: stat_kind
        description: |
          Type of statistic (actual or projection).
          Currently all values are 'actual' (projections in separate fact table per ADR-007).
        tests:
          - not_null
          - accepted_values:
              values: ['actual', 'projection']

      - name: provider
        description: Data source provider (currently all 'nflverse')
        tests:
          - not_null
          - accepted_values:
              values: ['nflverse']

    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - player_key
            - game_id
            - stat_name
            - provider
            - measure_domain
            - stat_kind
          config:
            severity: error
            error_if: ">0"
            where: "position IN ('QB', 'RB', 'WR', 'TE', 'K', 'FB')"  # Fantasy-relevant positions only

  - name: fact_league_transactions
    description: |
      League transaction history fact table - immutable event log.

      Records all league transactions (trades, signings, cuts, drafts, etc.) from
      Commissioner Google Sheet TRANSACTIONS tab with raw event fidelity.

      **Grain**: One row per transaction event per asset
      **Source**: Commissioner Sheet → parse_transactions() → stg_sheets__transactions
      **History**: 2012-2025 (~4,474 transactions)
      **Architecture**: Transaction fact table (Kimball pattern)

      **Contract Semantics**:
      - Extensions: Contract=extension only, Split=full remaining schedule
      - This creates intentional length mismatches (see validation_notes)
      - Deferred: dim_player_contract_history for clean contract state (Phase 3)

      **Data Quality**:
      - 100% player mapping coverage (via dim_name_alias seed)
      - ~0.9% length mismatches (expected for Extensions)
      - ~1.4% sum mismatches (mostly ±$1 rounding)
      - See: docs/analysis/TRANSACTIONS_contract_validation_analysis.md

    columns:
      - name: transaction_id_unique
        description: |
          Unique identifier for each transaction-asset row (Primary Key).
          Format: {transaction_id}_{asset_index}
        tests:
          - unique
          - not_null

      - name: transaction_id
        description: |
          Transaction event identifier (groups all assets in same trade/event).
          Multi-asset trades share the same transaction_id.
        tests:
          - not_null

      - name: player_key
        description: |
          Composite identifier to prevent grain violations.
          - Mapped players: player_id (mfl_id as varchar)
          - Unmapped players: player_name
          - Picks: pick_id or 'PICK_' prefix
          - Defense: player_name or 'DEFENSE_' prefix
          - Cap space: 'CAP_' prefix
        tests:
          - not_null

      - name: transaction_type
        description: |
          Refined transaction type (11 types).

          Derived from dim_timeframe.period_type + raw Type field.
        tests:
          - not_null
          - accepted_values:
              values:
                - rookie_draft_selection
                - cut
                - trade
                - waiver_claim
                - fasa_signing
                - faad_ufa_signing
                - faad_rfa_matched
                - offseason_ufa_signing
                - contract_extension
                - franchise_tag
                - amnesty_cut
                - unknown

      - name: asset_type
        description: |
          Asset classification (4 types + unknown).

          Inferred from Player/Position fields.
        tests:
          - not_null
          - accepted_values:
              values:
                - player
                - pick
                - defense
                - cap_space
                - unknown

      - name: transaction_date
        description: |
          Derived transaction date.

          Calculated from timeframe_string and period_type:
          - rookie_draft: Aug 1
          - faad: Aug 15
          - offseason: Mar 1
          - regular: week-based calculation from NFL season start
        tests:
          - not_null

      - name: transaction_year
        description: Year extracted from transaction_date (2012-2025)
        tests:
          - not_null

      - name: season
        description: Fantasy season year (2012-2025)
        tests:
          - not_null

      - name: from_franchise_id
        description: |
          Source franchise ID (null for waiver wire sources).

          FK to dim_franchise (SCD Type 2 temporal join on season).
        tests:
          - relationships:
              to: ref('dim_franchise')
              field: franchise_id
              config:
                where: "from_franchise_id is not null"

      - name: to_franchise_id
        description: |
          Destination franchise ID (null for waiver wire destinations).

          FK to dim_franchise (SCD Type 2 temporal join on season).
        tests:
          - relationships:
              to: ref('dim_franchise')
              field: franchise_id
              config:
                where: "to_franchise_id is not null"

      - name: player_id
        description: |
          Canonical player identifier (mfl_id from dim_player_id_xref).

          - Mapped players: positive integer mfl_id
          - Unmapped players: -1
          - Non-players: null

          100% player mapping coverage achieved.
        tests:
          - relationships:
              to: ref('dim_player_id_xref')
              field: player_id
              config:
                where: "asset_type = 'player' and player_id != -1"

      - name: pick_id
        description: |
          Standardized pick identifier.

          Format: YYYY_R#_P## (e.g., "2025_R1_P04") or YYYY_R#_TBD for unknown slot.

          **Note**: Compensatory picks (P13+) and TBD picks may not exist in dim_pick seed.
          This is expected - not all transaction picks are in the standard 12-team seed.
        tests:
          - relationships:
              to: ref('dim_pick')
              field: pick_id
              config:
                where: "asset_type = 'pick' and pick_id is not null and pick_id not like '%_TBD'"
                severity: warn  # Compensatory picks expected to fail

      - name: contract_total
        description: |
          Contract total amount (whole dollars).

          **Semantics vary by transaction_type**:
          - Draft: initial rookie contract
          - Extension: extension amount ONLY (not full remaining)
          - Signing: new contract total
          - Cut: remaining guaranteed amount

      - name: contract_years
        description: |
          Contract length in years (1-5).

          **For Extensions**: shows extension years only.
          May not match len(contract_split_array) - this is expected.

      - name: contract_split_json
        description: |
          Year-by-year cap hits as JSON array for DuckDB.

          **For Extensions**: shows FULL remaining schedule (base + extension).
          Use DuckDB json_extract() or list functions for analysis.

      - name: has_contract_length_mismatch
        description: |
          Data quality flag: len(split) != years.

          True for ~35 Extensions (0.9%) - EXPECTED behavior.
          See validation_notes for explanation.

      - name: has_contract_sum_mismatch
        description: |
          Data quality flag: sum(split) != total.

          True for ~55 contracts (1.4%) - mostly ±$1 rounding.
          See validation_notes for details.

      - name: validation_notes
        description: |
          Explanation of validation issues.

          Values:
          - "Extension shows full remaining schedule (expected per league accounting)"
          - "Large sum mismatch (>$5) - review with commissioner"
          - "Minor rounding variance (±$1-2)"
          - null (no issues)

      - name: rfa_matched
        description: |
          RFA match indicator (boolean).

          True when owner matched another team's RFA offer during FAAD.
          Only relevant for faad_rfa_matched transaction type.

      - name: faad_compensation
        description: |
          FAAD RFA compensation amount (whole dollars).

          Compensation given to losing team when RFA is signed by another team.

    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - transaction_id_unique
          config:
            severity: error
            error_if: ">0"

  - name: dim_player
    description: |
      Player dimension - conformed dimension for all player-based analysis.

      **Grain**: One row per player (mfl_id as canonical player_id)
      **Source**: dim_player_id_xref seed (nflverse ff_playerids with 19 provider ID mappings)

      **SCD Type 1** (overwrite): current_team
      **SCD Type 0** (immutable): draft_year, birthdate

      Provides display attributes and cross-platform provider ID mappings.

    columns:
      - name: player_id
        description: |
          Canonical player identifier (mfl_id).
          Primary key for player dimension.
        tests:
          - unique
          - not_null

      - name: display_name
        description: Player display name for presentation
        tests:
          - not_null

      - name: position
        description: |
          Player position (QB, RB, WR, TE, K, etc.).
          Fantasy-relevant positions: QB, RB, WR, TE, K, FB
        tests:
          - not_null

      - name: current_team
        description: |
          Current team assignment (SCD Type 1 - overwrites on change).
          Null for unsigned free agents.

      - name: draft_year
        description: |
          NFL draft year (SCD Type 0 - immutable).
          Null for undrafted free agents.

  - name: dim_team
    description: |
      NFL team dimension - static reference for all NFL team-based analysis.

      **Grain**: One row per NFL team (team_abbr as natural key)
      **Source**: nflverse teams dataset

      Fairly static dimension - teams rarely change names, locations, or divisions.
      Denormalized to include conference and division (Kimball pattern - avoid snowflaking).

    columns:
      - name: team_id
        description: |
          Team identifier (team abbreviation - stable across seasons).
          Primary key for team dimension.
        tests:
          - unique
          - not_null

      - name: team_name
        description: Full team name (e.g., "Kansas City Chiefs")
        tests:
          - not_null

      - name: conference
        description: |
          Conference (AFC or NFC).
          Sourced from dim_team_conference_division seed.
        tests:
          - not_null
          - accepted_values:
              values: ['AFC', 'NFC']

      - name: division
        description: |
          Division (North, South, East, West).
          Sourced from dim_team_conference_division seed.
        tests:
          - not_null
          - accepted_values:
              values: ['North', 'South', 'East', 'West']

  - name: dim_schedule
    description: |
      NFL game schedule dimension - one row per game for all temporal analysis.

      **Grain**: One row per game (game_id as natural key)
      **Source**: nflverse schedule dataset

      Includes game timing, participating teams, results, and game context.
      Used to resolve game_id for player stats and provide game-level attributes.

    columns:
      - name: game_id
        description: |
          Game identifier (unique across all seasons).
          Primary key for schedule dimension.
        tests:
          - unique
          - not_null

      - name: season
        description: NFL season year (2020-2025)
        tests:
          - not_null

      - name: week
        description: Week number (1-22, includes playoffs)
        tests:
          - not_null

      - name: season_type
        description: |
          Season type: REG (regular season), POST (playoffs generic),
          WC (wild card), DIV (divisional), CON (conference), SB (super bowl), PRE (preseason)
        tests:
          - not_null
          - accepted_values:
              values: ['REG', 'POST', 'WC', 'DIV', 'CON', 'SB', 'PRE']

      - name: game_date
        description: Game date (YYYY-MM-DD)
        tests:
          - not_null

      - name: home_team_id
        description: Home team identifier (FK to dim_team)
        tests:
          - not_null
          - relationships:
              to: ref('dim_team')
              field: team_id

      - name: away_team_id
        description: Away team identifier (FK to dim_team)
        tests:
          - not_null
          - relationships:
              to: ref('dim_team')
              field: team_id

  - name: fact_asset_market_values
    description: |
      KTC dynasty market values fact table - time-series of asset valuations.

      Tracks crowdsourced dynasty market values from KeepTradeCut across time.
      Values represent community consensus on asset worth in dynasty leagues.

      **Grain**: One row per asset per market_scope per asof_date
      **Sources**: stg_ktc_assets (players + picks UNION)
      **Architecture**: Snapshot fact table (Kimball) - periodic snapshots

      **Asset Types**:
      - player: Active NFL players and rookies
      - pick: Future draft picks (2025-2028, Early/Mid/Late, rounds 1-5)

      **Market Scopes**:
      - dynasty_1qb: Standard 1-QB dynasty league format
      - dynasty_superflex: Superflex (2-QB) dynasty league format

      **Data Attribution**:
      Market values sourced from KeepTradeCut (https://keeptradecut.com/dynasty-rankings)
      per their content usage guidelines.

    columns:
      - name: player_key
        description: |
          Composite identity key for grain uniqueness.
          - Mapped players: mfl_id (as varchar)
          - Unmapped players: player_name
          - Picks: pick_name
        tests:
          - not_null

      - name: market_scope
        description: League format (dynasty_1qb or dynasty_superflex)
        tests:
          - not_null
          - accepted_values:
              values:
                - dynasty_1qb
                - dynasty_superflex

      - name: asof_date
        description: Snapshot date of market values
        tests:
          - not_null

      - name: asset_type
        description: Asset classification (player or pick)
        tests:
          - not_null
          - accepted_values:
              values:
                - player
                - pick

      - name: provider
        description: Data source provider
        tests:
          - not_null
          - accepted_values:
              values:
                - keeptradecut

      - name: overall_rank
        description: Overall rank across all assets in this market_scope
        tests:
          - not_null

      - name: ktc_value
        description: KTC value score (0-10000 scale)
        tests:
          - not_null

      - name: player_id
        description: |
          FK to dim_player_id_xref (null for picks and unmapped players).
          Value of -1 indicates unmapped player (no crosswalk match).
        tests:
          - relationships:
              to: ref('dim_player_id_xref')
              field: mfl_id
              config:
                where: "asset_type = 'player' and player_id != -1"

    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - player_key
            - market_scope
            - asof_date
          config:
            severity: error
            error_if: ">0"
