name: Test Secrets Configuration

on:
  workflow_dispatch:  # Manual trigger only for testing

jobs:
  test-secrets:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Verify GCP credentials
        env:
          GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}
        run: |
          echo "Testing GCP credentials..."
          echo "$GOOGLE_APPLICATION_CREDENTIALS_JSON" | base64 -d > /tmp/gcp-key.json

          # Check if it's valid JSON
          python -c "import json; json.load(open('/tmp/gcp-key.json'))"
          echo "✓ GCP credentials are valid JSON"

          # Clean up
          rm /tmp/gcp-key.json

      - name: Verify environment variables
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCS_BUCKET: ${{ secrets.GCS_BUCKET }}
          SLEEPER_LEAGUE_ID: ${{ secrets.SLEEPER_LEAGUE_ID }}
          COMMISSIONER_SHEET_URL: ${{ secrets.COMMISSIONER_SHEET_URL }}
          SPORTS_DATA_IO_API_KEY: ${{ secrets.SPORTS_DATA_IO_API_KEY }}
        run: |
          echo "Checking required secrets..."

          # Check required secrets are set
          if [ -z "$GCP_PROJECT_ID" ]; then
            echo "❌ GCP_PROJECT_ID is not set"
            exit 1
          else
            echo "✓ GCP_PROJECT_ID is configured"
          fi

          if [ -z "$GCS_BUCKET" ]; then
            echo "❌ GCS_BUCKET is not set"
            exit 1
          else
            echo "✓ GCS_BUCKET is configured"
          fi

          if [ -z "$SLEEPER_LEAGUE_ID" ]; then
            echo "❌ SLEEPER_LEAGUE_ID is not set"
            exit 1
          else
            echo "✓ SLEEPER_LEAGUE_ID is configured"
          fi

          if [ -z "$COMMISSIONER_SHEET_URL" ]; then
            echo "⚠ COMMISSIONER_SHEET_URL is not set (optional but recommended)"
          else
            echo "✓ COMMISSIONER_SHEET_URL is configured"
          fi

          if [ -z "$SPORTS_DATA_IO_API_KEY" ]; then
            echo "⚠ SPORTS_DATA_IO_API_KEY is not set (optional)"
          else
            echo "✓ SPORTS_DATA_IO_API_KEY is configured"
          fi

          echo ""
          echo "All required secrets are configured correctly!"

      - name: Test GCS access
        env:
          GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}
          GCS_BUCKET: ${{ secrets.GCS_BUCKET }}
        run: |
          # Install gcloud
          echo "$GOOGLE_APPLICATION_CREDENTIALS_JSON" | base64 -d > /tmp/gcp-key.json

          # Authenticate
          gcloud auth activate-service-account --key-file=/tmp/gcp-key.json

          # Test bucket access
          echo "Testing GCS bucket access..."
          if gsutil ls gs://$GCS_BUCKET/ > /dev/null 2>&1; then
            echo "✓ Successfully accessed GCS bucket: gs://$GCS_BUCKET/"
          else
            echo "❌ Failed to access GCS bucket"
            exit 1
          fi

          # Clean up
          rm /tmp/gcp-key.json
